name: Commission Scheduled Deploy

on:
  schedule:
    - cron: "*/30 * * * *"   # every 30 minutes
  workflow_dispatch:

permissions:
  contents: write

jobs:
  commission-apply-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Add commission compute (Python only) and wire imports
        shell: bash
        run: |
          set -e
          mkdir -p energy_broker_uk/models

          cat > energy_broker_uk/models/commission_compute.py <<'PY'
from odoo import models, fields

class CustomerContractCommission(models.Model):
    _inherit = 'customer.contract'

    commission_rule_id = fields.Many2one('energy.commission.rule', string='Commission Rule')
    supplier_commission = fields.Float(string='Supplier Commission GBP', readonly=True)
    broker_commission = fields.Float(string='Broker Commission GBP', readonly=True)
    upfront_commission = fields.Float(string='Upfront Commission GBP', readonly=True)
    full_commission = fields.Float(string='Full Commission GBP', readonly=True)
    first_payment_gbp = fields.Float(string='First Payment GBP', readonly=True)

    def _pick_base_amount(self):
        candidates = [
            'contract_value_gbp',
            'annual_value_gbp',
            'estimated_annual_cost_gbp',
            'total_cost_gbp',
        ]
        for name in candidates:
            if hasattr(self, name):
                try:
                    v = float(getattr(self, name) or 0.0)
                    if v:
                        return v
                except Exception:
                    pass
        return 0.0

    def _pick_percent(self, rule, names):
        for n in names:
            if hasattr(rule, n):
                try:
                    return float(getattr(rule, n) or 0.0)
                except Exception:
                    pass
        return 0.0

    def action_compute_commission(self):
        for rec in self:
            base = rec._pick_base_amount()
            rule = rec.commission_rule_id
            if not rule or base <= 0.0:
                rec.supplier_commission = 0.0
                rec.broker_commission = 0.0
                rec.upfront_commission = 0.0
                rec.full_commission = 0.0
                rec.first_payment_gbp = 0.0
                continue

            supplier_pct = rec._pick_percent(rule, ['supplier_percent', 'supplier_pct', 'supplier_commission_percent'])
            broker_pct   = rec._pick_percent(rule, ['broker_percent', 'broker_pct', 'broker_commission_percent'])
            upfront_pct  = rec._pick_percent(rule, ['upfront_percent', 'upfront_pct', 'upfront_commission_percent'])
            firstpay_pct = rec._pick_percent(rule, ['first_payment_percent', 'first_payment_pct', 'firstpay_percent'])

            supplier_amt = base * supplier_pct / 100.0
            broker_amt   = base * broker_pct   / 100.0
            upfront_amt  = base * upfront_pct  / 100.0
            full_amt     = supplier_amt + broker_amt + upfront_amt
            firstpay_amt = full_amt * firstpay_pct / 100.0

            rec.supplier_commission = supplier_amt
            rec.broker_commission = broker_amt
            rec.upfront_commission = upfront_amt
            rec.full_commission = full_amt
            rec.first_payment_gbp = firstpay_amt
PY

          grep -q "^from \. import commission_compute$" energy_broker_uk/models/__init__.py || echo "from . import commission_compute" >> energy_broker_uk/models/__init__.py

          git config user.name "CI Runner"
          git config user.email "ci@runner"
          git add energy_broker_uk/models/commission_compute.py energy_broker_uk/models/__init__.py
          git commit -m "feat(commission): compute fields + action in Python only (safe deploy)" || echo "nothing to commit"
          git push

      - name: Deploy to Odoo (pull + restart + tail logs)
        shell: bash
        run: |
          set -e
          git -C /opt/custom-addons/energy_broker_uk pull
          sudo systemctl restart odoo19.service || systemctl restart odoo19.service
          sleep 3
          tail -n 200 /opt/odoo19/log/logfile.txt || true
